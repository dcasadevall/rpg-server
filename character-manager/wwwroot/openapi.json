{
  "openapi": "3.0.3",
  "info": {
    "title": "RPG Character Management API",
    "description": "A RESTful service for managing D&D-inspired RPG characters.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5266/api/v1"
    }
  ],
  "paths": {
    "/roll/{sides}": {
      "get": {
        "summary": "Roll a Dice",
        "operationId": "rollDice",
        "parameters": [
          {
            "name": "sides",
            "in": "path",
            "required": true,
            "description": "Number of sides on the dice",
            "schema": {
              "type": "integer",
              "enum": [
                4,
                6,
                8,
                10,
                12,
                20
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful dice roll",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer",
                      "minimum": 1
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid sides format"
          },
          "422": {
            "description": "Invalid sides - not a valid dice type"
          }
        }
      }
    },
    "/characters": {
      "post": {
        "summary": "Create a New Character",
        "operationId": "createCharacter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "race": {
                    "type": "string"
                  },
                  "subRace": {
                    "type": "string"
                  },
                  "class": {
                    "type": "string"
                  }
                },
                "required": [
                  "race",
                  "class"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Character created successfully."
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/characters/{id}": {
      "get": {
        "summary": "Retrieve Character Information",
        "operationId": "getCharacter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID Format"
          },
          "404": {
            "description": "Character Not Found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Character",
        "operationId": "deleteCharacter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid ID Format"
          },
          "404": {
            "description": "Character Not Found"
          }
        }
      }
    },
    "/characters/{id}/initial-currency": {
      "post": {
        "summary": "Initialize a Character's Currency",
        "operationId": "initCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currency Initialized"
          },
          "400": {
            "description": "Invalid ID Format"
          },
          "404": {
            "description": "Character Not Found"
          },
          "409": {
            "description": "Currency Already Initialized"
          }
        }
      }
    },
    "/characters/{id}/hitpoints": {
      "patch": {
        "summary": "Update Character Hit Points",
        "operationId": "updateHitPoints",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delta": {
                    "type": "integer"
                  }
                },
                "required": [
                  "delta"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hit Points Updated"
          },
          "400": {
            "description": "Invalid ID or Delta"
          },
          "404": {
            "description": "Character Not Found"
          }
        }
      }
    },
    "/characters/{id}/armor/{armorId}": {
      "patch": {
        "summary": "Equip Armor to a Character",
        "operationId": "equipArmor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "armorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Armor Equipped"
          },
          "400": {
            "description": "Invalid ID or Armor ID"
          },
          "404": {
            "description": "Character or Armor Not Found"
          }
        }
      }
    },
    "/characters/{id}/weapons/{weaponId}": {
      "patch": {
        "summary": "Equip Weapon to a Character",
        "operationId": "equipWeapon",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "weaponId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "offHand": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Weapon Equipped"
          },
          "400": {
            "description": "Invalid ID or Weapon ID"
          },
          "404": {
            "description": "Character or Weapon Not Found"
          }
        }
      }
    },
    "/characters/{id}/currency": {
      "patch": {
        "summary": "Modify Character Currency",
        "operationId": "modifyCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gold": {
                    "type": "integer"
                  },
                  "silver": {
                    "type": "integer"
                  },
                  "bronze": {
                    "type": "integer"
                  },
                  "copper": {
                    "type": "integer"
                  },
                  "electrum": {
                    "type": "integer"
                  },
                  "platinum": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Currency Modified"
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Character Not Found"
          }
        }
      }
    },
    "/characters/{id}/currency/exchange": {
      "patch": {
        "summary": "Exchange Character Currency",
        "operationId": "exchangeCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "integer"
                  }
                },
                "required": [
                  "from",
                  "to",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Currency Exchanged"
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Character Not Found"
          }
        }
      }
    }
  }
}