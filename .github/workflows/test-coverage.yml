name: Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test with coverage
      run: |
        dotnet test --collect:"XPlat Code Coverage" --results-directory:"${{ github.workspace }}/TestResults" --logger:"trx;LogFileName=test-results.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput="${{ github.workspace }}/TestResults/coverage.cobertura.xml"

    - name: Generate coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:"${{ github.workspace }}/TestResults/coverage.cobertura.xml" -targetdir:"${{ github.workspace }}/TestResults/CoverageReport" -reporttypes:Html

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ${{ github.workspace }}/TestResults/test-results.trx

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ${{ github.workspace }}/TestResults/CoverageReport

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ${{ github.workspace }}/TestResults/coverage.cobertura.xml
        fail_ci_if_error: true
